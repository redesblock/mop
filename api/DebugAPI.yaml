openapi: 3.0.3
info:
  version: 0.9.0
  title: Mop Debug API
  description: "A list of the currently provided debug interfaces to interact with the mop node"

security:
  - {}

externalDocs:
  description: Browse the documentation @ the Cluster Docs
  url: "https://docs.bnbcluster.org"

servers:
  - url: "http://{apiRoot}:{port}"
    variables:
      apiRoot:
        default: "localhost"
        description: Base address of the local mop node debug API
      port:
        default: "1685"
        description: Service port provided in mop node config

paths:
  "/addresses":
    get:
      summary: Get overlay and underlay addresses of the node
      tags:
        - Connectivity
      responses:
        "200":
          description: Own node underlay and overlay addresses
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/Addresses"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response

  "/accounting":
    get:
      summary: Get all bookkeeper associated values with all known peers
      tags:
        - Balance
      responses:
        "200":
          description: Own bookkeeper associated values with all known peers
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/PeerAccountingData"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response

  "/balances":
    get:
      summary: Get the balances with all known peers including prepaid services
      tags:
        - Balance
      responses:
        "200":
          description: Own balances with all known peers
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/Balances"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response

  "/balances/{address}":
    get:
      summary: Get the balances with a specific peer including prepaid services
      tags:
        - Balance
      parameters:
        - in: path
          name: address
          schema:
            $ref: "Common.yaml#/components/schemas/ClusterAddress"
          required: true
          description: Cluster address of peer
      responses:
        "200":
          description: Balance with the specific peer
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/Balance"
        "404":
          $ref: "Common.yaml#/components/responses/404"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response

  "/blocklist":
    get:
      summary: Get a list of blocklisted peers
      tags:
        - Connectivity
      responses:
        "200":
          description: Returns overlay addresses of blocklisted peers
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/Peers"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response

  "/consumed":
    get:
      summary: Get the past due consumption balances with all known peers
      tags:
        - Balance
      responses:
        "200":
          description: Own past due consumption balances with all known peers
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/Balances"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response

  "/consumed/{address}":
    get:
      summary: Get the past due consumption balance with a specific peer
      tags:
        - Balance
      parameters:
        - in: path
          name: address
          schema:
            $ref: "Common.yaml#/components/schemas/ClusterAddress"
          required: true
          description: Cluster address of peer
      responses:
        "200":
          description: Past-due consumption balance with the specific peer
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/Balance"
        "404":
          $ref: "Common.yaml#/components/responses/404"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response

  "/chequebook/address":
    get:
      summary: Get the address of the chequebook contract used
      tags:
        - Chequebook
      responses:
        "200":
          description: BNB Smart Chain address of chequebook contract
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/ChequebookAddress"

  "/chequebook/balance":
    get:
      summary: Get the balance of the chequebook
      tags:
        - Chequebook
      responses:
        "200":
          description: Balance of the chequebook
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/ChequebookBalance"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response

  "/chunks/{address}":
    get:
      summary: Check if chunk at address exists locally
      tags:
        - Chunk
      parameters:
        - in: path
          name: address
          schema:
            $ref: "Common.yaml#/components/schemas/ClusterAddress"
          required: true
          description: Cluster address of chunk
      responses:
        "200":
          description: Chunk exists
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/Response"
        "400":
          $ref: "Common.yaml#/components/responses/400"
        "404":
          $ref: "Common.yaml#/components/responses/404"
        default:
          description: Default response
    delete:
      summary: Delete a chunk from local storage
      tags:
        - Chunk
      parameters:
        - in: path
          name: address
          schema:
            $ref: "Common.yaml#/components/schemas/ClusterAddress"
          required: true
          description: Cluster address of chunk
      responses:
        "200":
          description: Chunk exists
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/Response"
        "400":
          $ref: "Common.yaml#/components/responses/400"
        "404":
          $ref: "Common.yaml#/components/responses/404"
        default:
          description: Default response

  "/connect/{multiAddress}":
    post:
      summary: Connect to address
      tags:
        - Connectivity
      parameters:
        - in: path
          allowReserved: true
          name: multiAddress
          schema:
            $ref: "Common.yaml#/components/schemas/MultiAddress"
          required: true
          description: Underlay address of peer
      responses:
        "200":
          description: Returns overlay address of connected peer
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/Address"
        "400":
          $ref: "Common.yaml#/components/responses/400"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response

  "/reservestate":
    get:
      summary: Get reserve state
      tags:
        - Status
      responses:
        "200":
          description: Reserve State
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/ReserveState"
        default:
          description: Default response

  "/chainstate":
    get:
      summary: Get chain state
      tags:
        - Status
      responses:
        "200":
          description: Chain State
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/ChainState"
        default:
          description: Default response

  "/node":
    get:
      summary: Get information about the node
      tags:
        - Status
      responses:
        "200":
          description: Information about the node
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/Node"
        default:
          description: Default response

  "/health":
    get:
      summary: Get health of node
      tags:
        - Status
      responses:
        "200":
          description: Health State of node
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/Status"
        default:
          description: Default response

  "/readiness":
    get:
      summary: Readiness endpoint indicates if node is ready to start accepting traffic
      tags:
        - Status
      responses:
        "200":
          description: Indicates that node is ready
          $ref: "Common.yaml#/components/responses/200"
        "400":
          description: Indicates that node is not ready
          $ref: "Common.yaml#/components/responses/400"
        default:
          description: Default response

  "/peers":
    get:
      summary: Get a list of peers
      tags:
        - Connectivity
      responses:
        "200":
          description: Returns overlay addresses of connected peers
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/Peers"
        default:
          description: Default response

  "/peers/{address}":
    delete:
      summary: Remove peer
      tags:
        - Connectivity
      parameters:
        - in: path
          name: address
          schema:
            $ref: "Common.yaml#/components/schemas/ClusterAddress"
          required: true
          description: Cluster address of peer
      responses:
        "200":
          description: Disconnected peer
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/Response"
        "400":
          $ref: "Common.yaml#/components/responses/400"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response

  "/pingpong/{peer-id}":
    post:
      summary: Try connection to node
      tags:
        - Connectivity
      parameters:
        - in: path
          name: peer-id
          schema:
            $ref: "Common.yaml#/components/schemas/ClusterAddress"
          required: true
          description: Cluster address of peer
      responses:
        "200":
          description: Returns round trip time for given peer
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/RttMs"
        "400":
          $ref: "Common.yaml#/components/responses/400"
        "404":
          $ref: "Common.yaml#/components/responses/404"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response


  "/settlements/{address}":
    get:
      summary: Get amount of sent and received from settlements with a peer
      tags:
        - Settlements
      parameters:
        - in: path
          name: address
          schema:
            $ref: "Common.yaml#/components/schemas/ClusterAddress"
          required: true
          description: Cluster address of peer
      responses:
        "200":
          description: Amount of sent or received from settlements with a peer
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/Settlement"
        "404":
          $ref: "Common.yaml#/components/responses/404"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response

  "/settlements":
    get:
      summary: Get settlements with all known peers and total amount sent or received
      tags:
        - Settlements
      responses:
        "200":
          description: Settlements with all known peers and total amount sent or received
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/Settlements"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response

  "/timesettlements":
    get:
      summary: Get time based settlements with all known peers and total amount sent or received
      tags:
        - Settlements
      responses:
        "200":
          description: Time based settlements with all known peers and total amount sent or received
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/Settlements"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response

  "/topology":
    get:
      description: Get topology of known network
      tags:
        - Connectivity
      responses:
        "200":
          description: Cluster topology of the mop node
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/MopTopology"

  "/welcome-message":
    get:
      summary: Get configured P2P welcome message
      tags:
        - Connectivity
      responses:
        "200":
          description: Welcome message
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/WelcomeMessage"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response
    post:
      summary: Set P2P welcome message
      tags:
        - Connectivity
      requestBody:
        content:
          application/json:
            schema:
              $ref: "Common.yaml#/components/schemas/WelcomeMessage"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/Status"
        "400":
          $ref: "Common.yaml#/components/responses/400"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response

  "/chequebook/cashout/{peer-id}":
    get:
      summary: Get last cashout action for the peer
      parameters:
        - in: path
          name: peer-id
          schema:
            $ref: "Common.yaml#/components/schemas/ClusterAddress"
          required: true
          description: Cluster address of peer
      tags:
        - Chequebook
      responses:
        "200":
          description: Cashout status
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/SwapCashoutStatus"
        "404":
          $ref: "Common.yaml#/components/responses/404"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response
    post:
      summary: Cashout the last cheque for the peer
      parameters:
        - in: path
          name: peer-id
          schema:
            $ref: "Common.yaml#/components/schemas/ClusterAddress"
          required: true
          description: Cluster address of peer
        - $ref: "Common.yaml#/components/parameters/GasPriceParameter"
        - $ref: "Common.yaml#/components/parameters/GasLimitParameter"
      tags:
        - Chequebook
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/TransactionResponse"
        "404":
          $ref: "Common.yaml#/components/responses/404"
        "429":
          $ref: "Common.yaml#/components/responses/429"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response

  "/chequebook/cheque/{peer-id}":
    get:
      summary: Get last cheques for the peer
      parameters:
        - in: path
          name: peer-id
          schema:
            $ref: "Common.yaml#/components/schemas/ClusterAddress"
          required: true
          description: Cluster address of peer
      tags:
        - Chequebook
      responses:
        "200":
          description: Last cheques
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/ChequePeerResponse"
        "404":
          $ref: "Common.yaml#/components/responses/404"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response

  "/chequebook/cheque":
    get:
      summary: Get last cheques for all peers
      tags:
        - Chequebook
      responses:
        "200":
          description: Last cheques
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/ChequeAllPeersResponse"
        "404":
          $ref: "Common.yaml#/components/responses/404"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response

  "/chequebook/deposit":
    post:
      summary: Deposit tokens from overlay address into chequebook
      parameters:
        - in: query
          name: amount
          schema:
            type: integer
          required: true
          description: amount of tokens to deposit
        - $ref: "Common.yaml#/components/parameters/GasPriceParameter"
      tags:
        - Chequebook
      responses:
        "201":
          description: Transaction hash of the deposit transaction
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/TransactionResponse"
        "400":
          $ref: "Common.yaml#/components/responses/404"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response

  "/chequebook/withdraw":
    post:
      summary: Withdraw tokens from the chequebook to the overlay address
      parameters:
        - in: query
          name: amount
          schema:
            type: integer
          required: true
          description: amount of tokens to withdraw
        - $ref: "Common.yaml#/components/parameters/GasPriceParameter"
      tags:
        - Chequebook
      responses:
        "201":
          description: Transaction hash of the withdraw transaction
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/TransactionResponse"
        "400":
          $ref: "Common.yaml#/components/responses/404"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response

  "/tags/{uid}":
    get:
      summary: "Get Tag information using Uid"
      tags:
        - Tag
      parameters:
        - in: path
          name: uid
          schema:
            $ref: "Common.yaml#/components/schemas/Uid"
          required: true
          description: Uid
      responses:
        "200":
          description: Tag info
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/NewTagDebugResponse"
        "400":
          $ref: "Common.yaml#/components/responses/400"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response

  "/wallet":
    get:
      summary: Get wallet balance for MOP and BNB
      tags:
        - Wallet
      responses:
        "200":
          description: Wallet balance info
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/WalletResponse"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response

  "/transactions":
    get:
      summary: Get list of pending transactions
      tags:
        - Transaction
      responses:
        "200":
          description: List of pending transactions
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/PendingTransactionsResponse"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response

  "/transactions/{txHash}":
    get:
      summary: Get information about a sent transaction
      parameters:
        - in: path
          name: txHash
          schema:
            $ref: "Common.yaml#/components/schemas/TransactionHash"
          required: true
          description: Hash of the transaction
      tags:
        - Transaction
      responses:
        "200":
          description: Get info about transaction
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/TransactionInfo"
        "404":
          $ref: "Common.yaml#/components/responses/404"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response
    post:
      summary: Rebroadcast existing transaction
      parameters:
        - in: path
          name: txHash
          schema:
            $ref: "Common.yaml#/components/schemas/TransactionHash"
          required: true
          description: Hash of the transaction
      tags:
        - Transaction
      responses:
        "200":
          description: Hash of the transaction
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/TransactionResponse"
        "404":
          $ref: "Common.yaml#/components/responses/404"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response
    delete:
      summary: Cancel existing transaction
      parameters:
        - in: path
          name: txHash
          schema:
            $ref: "Common.yaml#/components/schemas/TransactionHash"
          required: true
          description: Hash of the transaction
        - $ref: "Common.yaml#/components/parameters/GasPriceParameter"
      tags:
        - Transaction
      responses:
        "200":
          description: Hash of the transaction
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/TransactionResponse"
        "404":
          $ref: "Common.yaml#/components/responses/404"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response

  "/stamps":
    parameters:
      - in: query
        name: all
        schema:
          $ref: "Common.yaml#/components/schemas/isAll"
        description: Gets all stamps. Default is null.
    get:
      summary: Get stamps for this node
      tags:
        - Voucher Stamps
      responses:
        "200":
          description: Returns an array of voucher batches.
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/DebugVoucherBatchesResponse"

        default:
          description: Default response

  "/stamps/{id}":
    parameters:
      - in: path
        name: id
        schema:
          $ref: "Common.yaml#/components/schemas/BatchID"
        required: true
        description: Cluster address of the stamp
    get:
      summary: Get an individual voucher batch status
      tags:
        - Voucher Stamps
      responses:
        "200":
          description: Returns an individual voucher batch state
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/DebugVoucherBatch"
        "400":
          $ref: "Common.yaml#/components/responses/400"
        default:
          description: Default response

  "/stamps/{id}/buckets":
    parameters:
      - in: path
        name: id
        schema:
          $ref: "Common.yaml#/components/schemas/BatchID"
        required: true
        description: Cluster address of the stamp
    get:
      summary: Get extended bucket data of a batch
      tags:
        - Voucher Stamps
      responses:
        "200":
          description: Returns extended bucket data of the provided batch ID
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/VoucherStampBuckets"
        "400":
          $ref: "Common.yaml#/components/responses/400"
        default:
          description: Default response

  "/stamps/{amount}/{depth}":
    post:
      summary: Buy a new voucher batch.
      description: Be aware, this endpoint creates an on-chain transactions and transfers MOP from the node's BNB Smart Chain account and hence directly manipulates the wallet balance!
      tags:
        - Voucher Stamps
      parameters:
        - in: path
          name: amount
          schema:
            $ref: "Common.yaml#/components/schemas/BigInt"
          required: true
          description: Amount of MOP added that the voucher batch will have.
        - in: path
          name: depth
          schema:
            type: integer
          required: true
          description: Batch depth which specifies how many chunks can be signed with the batch. It is a logarithm. Must be higher than default bucket depth (16)
        - in: query
          name: label
          schema:
            type: string
          required: false
          description: An optional label for this batch
        - in: header
          name: immutable
          schema:
            type: boolean
          required: false
        - $ref: "Common.yaml#/components/parameters/GasPriceParameter"
      responses:
        "201":
          description: Returns the newly created voucher batch ID
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/BatchIDResponse"
        "400":
          $ref: "Common.yaml#/components/responses/400"
        "429":
          $ref: "Common.yaml#/components/responses/429"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response

  "/stamps/topup/{id}/{amount}":
    patch:
      summary: Top up an existing voucher batch.
      description: Be aware, this endpoint creates on-chain transactions and transfers MOP from the node's BNB Smart Chain account and hence directly manipulates the wallet balance!
      tags:
        - Voucher Stamps
      parameters:
        - in: path
          name: id
          schema:
            $ref: "Common.yaml#/components/schemas/BatchID"
          required: true
          description: Batch ID to top up
        - in: path
          name: amount
          schema:
            type: integer
          required: true
          description: Amount of MOP per chunk to top up to an existing voucher batch.
      responses:
        "202":
          description: Returns the voucher batch ID that was topped up
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/BatchIDResponse"
        "400":
          $ref: "Common.yaml#/components/responses/400"
        "429":
          $ref: "Common.yaml#/components/responses/429"
        "402":
          $ref: "Common.yaml#/components/responses/402"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response

  "/stamps/dilute/{id}/{depth}":
    patch:
      summary: Dilute an existing voucher batch.
      description: Be aware, this endpoint creates on-chain transactions and transfers MOP from the node's BNB Smart Chain account and hence directly manipulates the wallet balance!
      tags:
        - Voucher Stamps
      parameters:
        - in: path
          name: id
          schema:
            $ref: "Common.yaml#/components/schemas/BatchID"
          required: true
          description: Batch ID to dilute
        - in: path
          name: depth
          schema:
            type: integer
          required: true
          description: New batch depth. Must be higher than the previous depth.
      responses:
        "202":
          description: Returns the voucher batch ID that was diluted.
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/BatchIDResponse"
        "400":
          $ref: "Common.yaml#/components/responses/400"
        "429":
          $ref: "Common.yaml#/components/responses/429"
        "500":
          $ref: "Common.yaml#/components/responses/500"
        default:
          description: Default response

  "/batches":
    get:
      summary: Get all globally available batches that were purchased by all nodes.
      tags:
        - Voucher Stamps
      responses:
        "200":
          description: Returns an array of all available and currently valid voucher batches.
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/DebugVoucherAllBatchesResponse"

        default:
          description: Default response

  "/loggers":
    get:
      summary: Get all available loggers.
      tags:
        - Logging
      responses:
        "200":
          description: Returns an array of all available loggers, also represented in short form in a tree.
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/LoggerResponse"
        "400":
          $ref: "Common.yaml#/components/responses/400"
        default:
            description: Default response

  "/loggers/{exp}":
    get:
      summary: Get all available loggers that match the specified expression.
      parameters:
        - in: path
          name: exp
          schema:
            $ref: "Common.yaml#/components/schemas/LoggerExp"
          required: true
          description: Regular expression or a subsystem that matches the logger(s).
      tags:
        - Logging
      responses:
        "200":
          description: Returns an array of all available loggers that matches given expression, also represented in short form in a tree.
          content:
            application/json:
              schema:
                $ref: "Common.yaml#/components/schemas/LoggerResponse"
        "400":
          $ref: "Common.yaml#/components/responses/400"
        default:
          description: Default response
    put:
      summary: Set logger(s) verbosity level.
      parameters:
        - in: path
          name: exp
          schema:
            $ref: "Common.yaml#/components/schemas/LoggerExp"
          required: true
          description: Regular expression or a subsystem that matches the logger(s).
      tags:
        - Logging
      responses:
        "200":
          description: The verbosity was changed successfully.
        "400":
          $ref: "Common.yaml#/components/responses/400"
        default:
          description: Default response
